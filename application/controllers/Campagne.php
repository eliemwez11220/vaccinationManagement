<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Campagne extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Campagne_model');
    } 

    /*
     * Listing of campagnes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('campagne/index?');
        $config['total_rows'] = $this->Campagne_model->get_all_campagnes_count();
        $this->pagination->initialize($config);

        $data['campagnes'] = $this->Campagne_model->get_all_campagnes($params);
        
        $data['_view'] = 'campagne/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new campagne
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('designation','Designation','required');
		$this->form_validation->set_rules('date_debut','Date Debut','required');
		$this->form_validation->set_rules('date_fin','Date Fin','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'designation' => $this->input->post('designation'),
				'type_campagne' => $this->input->post('type_campagne'),
				'date_debut' => $this->input->post('date_debut'),
				'date_fin' => $this->input->post('date_fin'),
				'date_created' => $this->input->post('date_created'),
				'last_update' => $this->input->post('last_update'),
				'description' => $this->input->post('description'),
            );
            
            $campagne_id = $this->Campagne_model->add_campagne($params);
            redirect('campagne/index');
        }
        else
        {            
            $data['_view'] = 'campagne/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a campagne
     */
    function edit($camp_id)
    {   
        // check if the campagne exists before trying to edit it
        $data['campagne'] = $this->Campagne_model->get_campagne($camp_id);
        
        if(isset($data['campagne']['camp_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('designation','Designation','required');
			$this->form_validation->set_rules('date_debut','Date Debut','required');
			$this->form_validation->set_rules('date_fin','Date Fin','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'designation' => $this->input->post('designation'),
					'type_campagne' => $this->input->post('type_campagne'),
					'date_debut' => $this->input->post('date_debut'),
					'date_fin' => $this->input->post('date_fin'),
					'date_created' => $this->input->post('date_created'),
					'last_update' => $this->input->post('last_update'),
					'description' => $this->input->post('description'),
                );

                $this->Campagne_model->update_campagne($camp_id,$params);            
                redirect('campagne/index');
            }
            else
            {
                $data['_view'] = 'campagne/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The campagne you are trying to edit does not exist.');
    } 

    /*
     * Deleting campagne
     */
    function remove($camp_id)
    {
        $campagne = $this->Campagne_model->get_campagne($camp_id);

        // check if the campagne exists before trying to delete it
        if(isset($campagne['camp_id']))
        {
            $this->Campagne_model->delete_campagne($camp_id);
            redirect('campagne/index');
        }
        else
            show_error('The campagne you are trying to delete does not exist.');
    }
    
}
