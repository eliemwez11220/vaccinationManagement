<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Centre extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Centre_model');
    } 

    /*
     * Listing of centres
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('centre/index?');
        $config['total_rows'] = $this->Centre_model->get_all_centres_count();
        $this->pagination->initialize($config);

        $data['centres'] = $this->Centre_model->get_all_centres($params);
        
        $data['_view'] = 'centre/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new centre
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nom_centre','Nom Centre','required');
		$this->form_validation->set_rules('contact','Contact','required');
		$this->form_validation->set_rules('medecin_responsable','Medecin Responsable','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nom_centre' => $this->input->post('nom_centre'),
				'contact' => $this->input->post('contact'),
				'medecin_responsable' => $this->input->post('medecin_responsable'),
				'ville_centre' => $this->input->post('ville_centre'),
				'date_created' => $this->input->post('date_created'),
				'last_update' => $this->input->post('last_update'),
				'adresse' => $this->input->post('adresse'),
            );
            
            $centre_id = $this->Centre_model->add_centre($params);
            redirect('centre/index');
        }
        else
        {            
            $data['_view'] = 'centre/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a centre
     */
    function edit($centre_id)
    {   
        // check if the centre exists before trying to edit it
        $data['centre'] = $this->Centre_model->get_centre($centre_id);
        
        if(isset($data['centre']['centre_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nom_centre','Nom Centre','required');
			$this->form_validation->set_rules('contact','Contact','required');
			$this->form_validation->set_rules('medecin_responsable','Medecin Responsable','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nom_centre' => $this->input->post('nom_centre'),
					'contact' => $this->input->post('contact'),
					'medecin_responsable' => $this->input->post('medecin_responsable'),
					'ville_centre' => $this->input->post('ville_centre'),
					'date_created' => $this->input->post('date_created'),
					'last_update' => $this->input->post('last_update'),
					'adresse' => $this->input->post('adresse'),
                );

                $this->Centre_model->update_centre($centre_id,$params);            
                redirect('centre/index');
            }
            else
            {
                $data['_view'] = 'centre/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The centre you are trying to edit does not exist.');
    } 

    /*
     * Deleting centre
     */
    function remove($centre_id)
    {
        $centre = $this->Centre_model->get_centre($centre_id);

        // check if the centre exists before trying to delete it
        if(isset($centre['centre_id']))
        {
            $this->Centre_model->delete_centre($centre_id);
            redirect('centre/index');
        }
        else
            show_error('The centre you are trying to delete does not exist.');
    }
    
}
